CCS PCH C Compiler, Version 4.124, 5967               12-mar-13 15:38

               Filename: E:\Eletronica\Projetos\DetectorDisparos\int_timer.lst

               ROM used: 2092 bytes (6%)
                         Largest free fragment is 30672
               RAM used: 39 (3%) at main() level
                         65 (4%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  GOTO   0738
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00EA
0060:  BTFSS  FF2.4
0062:  GOTO   006C
0066:  BTFSC  FF2.1
0068:  GOTO   00BA
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include<18F45K20.h> 
.................... //////// Standard Header file for the PIC18F45K20 device //////////////// 
.................... #device PIC18F45K20 
.................... #list 
....................  
....................  
.................... #use delay(crystal = 15MHz, clock = 60MHz) 
070E:  CLRF   FEA
0710:  MOVLW  24
0712:  MOVWF  FE9
0714:  MOVF   FEF,W
0716:  BZ    0734
0718:  MOVLW  13
071A:  MOVWF  01
071C:  CLRF   00
071E:  DECFSZ 00,F
0720:  BRA    071E
0722:  DECFSZ 01,F
0724:  BRA    071C
0726:  MOVLW  73
0728:  MOVWF  00
072A:  DECFSZ 00,F
072C:  BRA    072A
072E:  NOP   
0730:  DECFSZ FEF,F
0732:  BRA    0718
0734:  GOTO   0828 (RETURN)
.................... #use rs232(xmit = PIN_C6, baud = 9600) 
*
0128:  BCF    F94.6
012A:  BCF    F8B.6
012C:  MOVLW  08
012E:  MOVWF  01
0130:  BRA    0132
0132:  NOP   
0134:  BSF    01.7
0136:  BRA    0154
0138:  BCF    01.7
013A:  RRCF   34,F
013C:  BTFSC  FD8.0
013E:  BSF    F8B.6
0140:  BTFSS  FD8.0
0142:  BCF    F8B.6
0144:  BSF    01.6
0146:  BRA    0154
0148:  BCF    01.6
014A:  DECFSZ 01,F
014C:  BRA    013A
014E:  BRA    0150
0150:  NOP   
0152:  BSF    F8B.6
0154:  MOVLW  02
0156:  MOVWF  00
0158:  CLRF   FE9
015A:  DECFSZ FE9,F
015C:  BRA    015A
015E:  DECFSZ 00,F
0160:  BRA    0158
0162:  BRA    0164
0164:  BTFSC  01.7
0166:  BRA    0138
0168:  BTFSC  01.6
016A:  BRA    0148
016C:  RETURN 0
....................  
.................... #fuses H4 
....................  
.................... static long long tick, tempo; 
.................... static long nrDisparos; 
....................  
.................... #INT_EXT 
.................... void ext_isr() { 
.................... 	delay_us(10); 
*
00BA:  MOVLW  31
00BC:  MOVWF  00
00BE:  DECFSZ 00,F
00C0:  BRA    00BE
00C2:  BRA    00C4
.................... 	clear_interrupt(INT_EXT); 
00C4:  BCF    FF2.1
.................... 	nrDisparos++; 
00C6:  INCF   21,F
00C8:  BTFSC  FD8.2
00CA:  INCF   22,F
.................... 	tempo = tick; 
00CC:  MOVFF  1C,20
00D0:  MOVFF  1B,1F
00D4:  MOVFF  1A,1E
00D8:  MOVFF  19,1D
.................... 	tick = 0; 
00DC:  CLRF   1C
00DE:  CLRF   1B
00E0:  CLRF   1A
00E2:  CLRF   19
.................... } 
....................  
00E4:  BCF    FF2.1
00E6:  GOTO   006C
.................... #INT_TIMER0 
.................... void timer0_isr() { 
.................... 	clear_interrupt(INT_TIMER0); 
00EA:  BCF    FF2.2
.................... 	set_timer0(50535); 
00EC:  MOVLW  C5
00EE:  MOVWF  FD7
00F0:  MOVLW  67
00F2:  MOVWF  FD6
.................... 	tick++; 
00F4:  MOVLW  01
00F6:  ADDWF  19,F
00F8:  BTFSC  FD8.0
00FA:  INCF   1A,F
00FC:  BTFSC  FD8.2
00FE:  INCF   1B,F
0100:  BTFSC  FD8.2
0102:  INCF   1C,F
.................... } 
....................  
0104:  BCF    FF2.2
0106:  GOTO   006C
.................... int main(void) { 
*
0738:  CLRF   FF8
073A:  BCF    FD0.7
073C:  BSF    07.7
073E:  CLRF   FEA
0740:  CLRF   FE9
0742:  BCF    F94.6
0744:  BSF    F8B.6
0746:  MOVLW  00
0748:  MOVWF  F7E
074A:  BCF    FC1.4
074C:  BCF    FC1.5
074E:  MOVF   F7F,W
0750:  ANDLW  E0
0752:  MOVWF  F7F
0754:  BCF    F79.5
0756:  BCF    F79.4
0758:  CLRF   F7A
075A:  CLRF   F7B
075C:  CLRF   19
075E:  CLRF   1A
0760:  CLRF   1B
0762:  CLRF   1C
0764:  CLRF   1D
0766:  CLRF   1E
0768:  CLRF   1F
076A:  CLRF   20
076C:  CLRF   21
076E:  CLRF   22
.................... 	set_timer0(50535); 
0770:  MOVLW  C5
0772:  MOVWF  FD7
0774:  MOVLW  67
0776:  MOVWF  FD6
.................... 	setup_timer_0(T0_INTERNAL); 
0778:  MOVLW  80
077A:  MOVWF  FD5
.................... 	clear_interrupt(INT_TIMER0); 
077C:  BCF    FF2.2
.................... 	clear_interrupt(INT_EXT); 
077E:  BCF    FF2.1
.................... 	enable_interrupts(INT_EXT_H2L); 
0780:  BSF    FF2.4
0782:  BCF    FF1.6
.................... 	enable_interrupts(INT_TIMER0); 
0784:  BSF    FF2.5
.................... 	enable_interrupts(GLOBAL); 
0786:  MOVLW  C0
0788:  IORWF  FF2,F
.................... 	while (true) { 
.................... 		printf("\fDisparos: %Lu", nrDisparos); 
078A:  MOVLW  0A
078C:  MOVWF  FF6
078E:  MOVLW  01
0790:  MOVWF  FF7
0792:  MOVLW  0B
0794:  MOVWF  27
0796:  RCALL  016E
0798:  MOVLW  10
079A:  MOVWF  FE9
079C:  MOVFF  22,24
07A0:  MOVFF  21,23
07A4:  BRA    018C
.................... 		printf("\n\rTempo: %.3f", (float) tempo / 1000); 
07A6:  MOVFF  20,26
07AA:  MOVFF  1F,25
07AE:  MOVFF  1E,24
07B2:  MOVFF  1D,23
07B6:  BRA    0240
07B8:  MOVFF  00,23
07BC:  MOVFF  01,24
07C0:  MOVFF  02,25
07C4:  MOVFF  03,26
07C8:  MOVFF  03,2A
07CC:  MOVFF  02,29
07D0:  MOVFF  01,28
07D4:  MOVFF  00,27
07D8:  CLRF   2E
07DA:  CLRF   2D
07DC:  MOVLW  7A
07DE:  MOVWF  2C
07E0:  MOVLW  88
07E2:  MOVWF  2B
07E4:  BRA    0276
07E6:  MOVFF  00,23
07EA:  MOVFF  01,24
07EE:  MOVFF  02,25
07F2:  MOVFF  03,26
07F6:  MOVLW  1A
07F8:  MOVWF  FF6
07FA:  MOVLW  01
07FC:  MOVWF  FF7
07FE:  MOVLW  09
0800:  MOVWF  27
0802:  RCALL  016E
0804:  MOVLW  89
0806:  MOVWF  FE9
0808:  MOVFF  26,2A
080C:  MOVFF  25,29
0810:  MOVFF  24,28
0814:  MOVFF  23,27
0818:  MOVLW  03
081A:  MOVWF  2B
081C:  BRA    0594
.................... 		delay_ms(500); 
081E:  MOVLW  02
0820:  MOVWF  23
0822:  MOVLW  FA
0824:  MOVWF  24
0826:  BRA    070E
0828:  DECFSZ 23,F
082A:  BRA    0822
.................... 	} 
082C:  BRA    078A
.................... } 
082E:  SLEEP 

Configuration Fuses:
   Word  1: C600   H4 FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV18 NOWDT WDT32768
   Word  3: 8F00   CCP2C1 PBADEN LPT1OSC HFOFST MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
